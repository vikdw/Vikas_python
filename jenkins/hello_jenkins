
def commit_msg = ""
 
pipeline {
    agent any

environment {
  commit_envmsg = "1st env value"
}
    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
                echo "${GIT_COMMIT}"
                script{
                def commitMessage = sh(script: 'git log -1 --pretty=%B', returnStdout: true).trim()
                echo "${commitMessage}"
                commit_msg = "${commitMessage}"
                }
                      
            }
        }
   stage('set ENV Values') {
            steps {
               script{
                     commit_envmsg = "${commit_msg}"
                       }
            }
        }

    stage('get ENV Values') {
            when {
                 //changelog 'build'
                 expression { commit_envmsg ==~ /^.*build.*/ }
                 }
            steps {
                echo "build found in commit message, getting commit msg."
                echo "${commit_msg}"
                echo "${commit_envmsg}"
            }
        }
    stages {
        stage('start down stream job') {
            steps {
                echo "${commit_envmsg} env from groovy."
                script{
                build(
                propagate: false, job: 'job2',
                parameters:
                  [string(value: "${commit_envmsg}", description: 'upstream job', name: 'commit_envmsg')]
                     )
                      }
            }
        }
    }
    }
}
